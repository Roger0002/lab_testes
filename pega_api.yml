---
- name: Playbook que brinca com API de mentirinha
  hosts: clienterhel8.transp.com
  become: True
  tasks:
    # Lista as vulnerabilidades
    - name: Exibe o json com as vulnerabilidades
      ansible.builtin.shell: cat /root/saida_api_vulnerabilidades.txt
      register: saida_vuln
      when: False

    - name: Atinge a API e obtem o json com as vulnerabilidades
      uri:
        url: http://192.168.122.5/api/3/vulnerabilities
        method: GET
        return_content: True
        status_code: 200
      register: json_vulnerabilidades

    - name: Gera uma LISTA com as vulnerabilidades chamada lista_vuln
      debug:
        msg: "{{ json_vulnerabilidades.content | from_json | json_query('resources[*].id') }}"
      register: lista_vuln

    - name: Exibe o json com os assets conhecidos pela API
      uri:
        url: http://192.168.122.5/api/3/assets
        method: GET
        return_content: True
        status_code: 200
      register: json_assets

    - name: Gera um LISTA contendo DICIONÁRIOS com os assets conhecidos pela API
      debug:
        msg: "{{ json_assets.content | from_json | json_query('resources[*].{id: id, hostName: hostName}') }}"
      register: list_assets

    - name: Gera uma lista de IDs de assets afetados pelas vulnerabilidades
      uri:
        url: http://192.168.122.5/api/3/{{ item }}/assets
        method: GET
        return_content: True
        status_code: 200
      loop: "{{ lista_vuln.msg }}"
      register: json_assets_afetados

    - debug:
        msg: "{{ item.content }}"
      loop: "{{ json_assets_afetados.results }}"

    #- name: Estágio - tarefa que prapara os dados da tarefa anterior para serem manipulados corretamente pela próxima tarefa
    #  debug:
    #    msg: "{{ json_maqs_geral.results | json_query('[].stdout') | join(',') }}"
    #  register: json_aprov

    #- name: Grava a lista em um fact
    #  set_fact:
    #    lista_servidores: "{{ json_aprov.msg | flatten | unique }}"

    #- name: Lista todas as máquinas afetadas por alguma vulnerabilidade, qualquer que seja ela
    #  debug:
    #    var: lista_servidores
    #  failed_when: lista_servidores | length == 0
...
